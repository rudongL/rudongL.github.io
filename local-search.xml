<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>RSSHub + FreshRSS + FluentReader 实现 RSS 订阅</title>
    <link href="/2021/07/03/RSSHub-FreshRSS-FluentReader-%E5%AE%9E%E7%8E%B0-RSS-%E8%AE%A2%E9%98%85/"/>
    <url>/2021/07/03/RSSHub-FreshRSS-FluentReader-%E5%AE%9E%E7%8E%B0-RSS-%E8%AE%A2%E9%98%85/</url>
    
    <content type="html"><![CDATA[<h2 id="为什么要使用-RSS"><a href="#为什么要使用-RSS" class="headerlink" title="为什么要使用 RSS ?"></a>为什么要使用 RSS ?</h2><p>避免推荐算法，腾讯某副总裁说 “你喜欢看猪食，看到的全是猪食。”；聚合感兴趣的内容，不用再去各个 APP 不断刷新，有更新可用通过在线 FreshRSS 服务和 PC 端 FluentReader 等软件推送。</p><p>由于 RSS 理念天生具有反广告性，很难在国内流行；同时优质的 RSS 源不容易寻找，容易失效；有人认为精华在评论部分，通过 RSS 订阅和去软件没什么区别。</p><p>目前个人认为可以将行业大佬的博客，关注的项目更新信息等信息流使用 RSS 来管理以提高效率。至于 bilibili 视频等直接去原网站查看即可。</p><h2 id="安装-nodejs"><a href="#安装-nodejs" class="headerlink" title="安装 nodejs"></a>安装 nodejs</h2><p>查看系统版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">cat /etc/redhat-release<br><span class="hljs-comment"># CentOS Linux release 7.9.2009 (Core)</span><br></code></pre></td></tr></table></figure><p>查看是否安装 wget</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">rpm  -aq | grep <span class="hljs-string">&quot;wget&quot;</span><br><span class="hljs-comment"># wget-1.14-18.el7_6.1.x86_64</span><br></code></pre></td></tr></table></figure><p>若没有安装则使用如下命令安装 wget</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install -y wget<br></code></pre></td></tr></table></figure><p>下载 nodejs 安装包，这里是通过 <a href="http://nodejs.cn/download/current/">node.js 中文网</a> 下载 LST 版 v14.17.1，并通过 <a href="https://mobaxterm.mobatek.net/">Mobaxterm</a> 将文件上传到服务器。</p><p>解压软件包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">xz -d node-v14.17.1-linux-x64.tar.xz<br>tar -xvf node-v14.17.1-linux-x64.tar<br></code></pre></td></tr></table></figure><p>测试是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /root/node-v14.17.1-linux-x64/bin<br>./node -v<br><span class="hljs-comment"># v14.17.1</span><br></code></pre></td></tr></table></figure><p>移动到 <code>/usr/local/src</code> 目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mv node-v14.17.1-linux-x64 /usr/<span class="hljs-built_in">local</span>/src/<br></code></pre></td></tr></table></figure><p>做软链接命令全局可用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">ln -s /usr/<span class="hljs-built_in">local</span>/src/node-v14.17.1-linux-x64/bin/node /usr/bin/node<br>ln -s /usr/<span class="hljs-built_in">local</span>/src/node-v14.17.1-linux-x64/bin/npm /usr/bin/npm<br>ln -s /usr/<span class="hljs-built_in">local</span>/src/node-v14.17.1-linux-x64/bin/npx /usr/bin/npx<br></code></pre></td></tr></table></figure><p>测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node -v<br></code></pre></td></tr></table></figure><h2 id="安装-cnpm"><a href="#安装-cnpm" class="headerlink" title="安装 cnpm"></a>安装 cnpm</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g cnpm --registry=https://registry.npm.taobao.org<br>ln -s /usr/<span class="hljs-built_in">local</span>/src/node-v14.17.1-linux-x64/lib/node_modules/cnpm/bin/cnpm /usr/bin/cnpm<br></code></pre></td></tr></table></figure><h2 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h2><p>查看是否安装 docker </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rpm -aq | grep docker<br></code></pre></td></tr></table></figure><p>卸载旧的版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum remove docker docker-client docker-client-latest docker-common docker-latest  docker-latest-logrotate docker-logrotate docker-engine<br></code></pre></td></tr></table></figure><p>需要的安装包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install -y yum-utils<br></code></pre></td></tr></table></figure><p>设置镜像的仓库，下载默认是国外的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo<br></code></pre></td></tr></table></figure><p>推荐使用阿里云镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<br></code></pre></td></tr></table></figure><p>更新 yum 软件包索引</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum makecache fast<br></code></pre></td></tr></table></figure><p>安装 docker 相关</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install docker-ce docker-ce-cli containerd.io<br></code></pre></td></tr></table></figure><p>启动 docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start docker<br></code></pre></td></tr></table></figure><p>查看是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker version<br></code></pre></td></tr></table></figure><p>配置镜像加速器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo mkdir -p /etc/docker<br>sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="hljs-string">&#x27;EOF&#x27;</span><br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://rel45hae.mirror.aliyuncs.com&quot;</span>]<br>&#125;<br>EOF<br>sudo systemctl daemon-reload<br>sudo systemctl restart docker<br></code></pre></td></tr></table></figure><h2 id="安装-GIt"><a href="#安装-GIt" class="headerlink" title="安装 GIt"></a>安装 GIt</h2><p>安装 git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install -y git<br></code></pre></td></tr></table></figure><p>查看版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git --version<br></code></pre></td></tr></table></figure><p>解决 阿里云服务器 git clone 慢的问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/ssh/ssh_config<br></code></pre></td></tr></table></figure><p><code>GSSAPIAuthentication yes</code> 改为 no</p><h2 id="部署-RSSHub"><a href="#部署-RSSHub" class="headerlink" title="部署 RSSHub"></a>部署 RSSHub</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/DIYgod/RSSHub.git<br><span class="hljs-built_in">cd</span> RSSHub<br></code></pre></td></tr></table></figure><p>安装 pm2 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g pm2<br>ln -s /usr/<span class="hljs-built_in">local</span>/src/node-v14.17.1-linux-x64/bin/pm2 /usr/<span class="hljs-built_in">local</span>/bin/pm2<br></code></pre></td></tr></table></figure><p>启动 rsshub</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"> cnpm ci --production<br><span class="hljs-comment"># pm2 start lib/index.js --name rsshub</span><br><span class="hljs-comment"># 后台方式启动</span><br><span class="hljs-comment"># which nohup</span><br><span class="hljs-comment"># .bash_profile中并source加载</span><br><br><span class="hljs-comment"># 如果没有就安装</span><br><span class="hljs-comment"># yum provides */nohup</span><br>nohup npm start &amp;<br></code></pre></td></tr></table></figure><p>开放阿里云 1200 端口，开放服务器端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看所有监听端口</span><br>netstat -lntp<br><span class="hljs-comment"># 开启防火墙服务</span><br>systemctl start firewalld.service<br><span class="hljs-comment"># 开放 8080 端口 80 443 22 1200</span><br>firewall-cmd --zone=public --add-port=8080/tcp --permanent<br>firewall-cmd --zone=public --add-port=1200/tcp --permanent   <span class="hljs-comment"># 开放5672端口</span><br>firewall-cmd --zone=public --remove-port=1200/tcp --permanent  <span class="hljs-comment">#关闭5672端口</span><br><span class="hljs-comment"># 查看开放端口</span><br>firewall-cmd --zone=public --list-ports<br>firewall-cmd --reload   <span class="hljs-comment"># 配置立即生效</span><br></code></pre></td></tr></table></figure><h3 id="部署-TTRSS"><a href="#部署-TTRSS" class="headerlink" title="部署 TTRSS"></a>部署 TTRSS</h3><p>下载 <a href="https://github.com/HenryQW/Awesome-TTRSS/blob/main/docker-compose.yml">docker-compose.yml</a> 到任意目录（推荐本地修改后上传，远程登录软件里面修改有 bug）</p><p><img src="https://gitee.com/rdleng0/typora-img/raw/master//img/20210702163055.png" alt="image-20210702163053360"></p><p>部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-compose up -d<br></code></pre></td></tr></table></figure><p>登录上面配置的连接，默认用户名：admin 密码：password。首先修改密码。</p><p>开启全文抓取</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo docker run -p 3000:3000 -d --restart=always wangqiru/mercury-parser-api<br></code></pre></td></tr></table></figure><h2 id="部署-FreshRSS"><a href="#部署-FreshRSS" class="headerlink" title="部署 FreshRSS"></a>部署 FreshRSS</h2><p>创建隔离网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker network create freshrss-network<br></code></pre></td></tr></table></figure><p>运行 FreshRSS</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker volume create freshrss-data<br>docker volume create freshrss-extensions<br><br><span class="hljs-comment"># Remember to replace freshrss.example.net by your server address in the command below:</span><br>docker run -d --restart unless-stopped --log-opt max-size=10m -v freshrss-data:/var/www/FreshRSS/data -v freshrss-extensions:/var/www/FreshRSS/extensions -e <span class="hljs-string">&#x27;CRON_MIN=4,34&#x27;</span> -e TZ=Asia/Shanghai --net freshrss-network -p 12003:80  --name freshrss<br><br><span class="hljs-comment">#freshrss/freshrss</span><br>  <br> <span class="hljs-comment"># --label traefik.port=80 \</span><br> <span class="hljs-comment"># --label traefik.frontend.rule=&#x27;Host:freshrss.example.net&#x27; \</span><br> <span class="hljs-comment"># --label traefik.frontend.headers.forceSTSHeader=true \</span><br> <span class="hljs-comment"># --label traefik.frontend.headers.STSSeconds=31536000 \</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>公约数算法</title>
    <link href="/2021/07/02/%E7%AE%97%E6%B3%95/"/>
    <url>/2021/07/02/%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>描述：求两数 m n 的最大公约数和最小公倍数之和。<br>输入：正整数 m，n（1 ≤  m ≤ 10^9，1 ≤ n ≤ 10^9）<br>输出：m + n</p><p>欧几里得最大公约数算法，a 和 b 的公约数等于 b 和 a 与 b 的余数的最大公约数，递归调用 int gcd(int,int) 方法。注意递归终止条件为 <code>b==0</code>。此算法时间复杂度为 **log(N)**。<br>最小公倍数是两数乘积除以最小公约数。考虑到乘法溢出问题数据类型使用 long 型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Main</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span>&#123;<br>        Scanner sc = <span class="hljs-keyword">new</span> Scanner(System.in);<br>        <span class="hljs-keyword">while</span>(sc.hasNext())&#123;<br>            <span class="hljs-keyword">long</span> m = sc.nextInt();<br>            <span class="hljs-keyword">long</span> n = sc.nextInt();<br>            <span class="hljs-keyword">long</span> j = gcd(m,n);<br>            <span class="hljs-keyword">long</span> k = m * n / j;<br>            System.out.println(j+k);<br>        &#125;<br>    &#125;<br><br>   <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">long</span> <span class="hljs-title">gcd</span><span class="hljs-params">(<span class="hljs-keyword">long</span> a,<span class="hljs-keyword">long</span> b)</span></span>&#123;<br>        <span class="hljs-keyword">if</span>(b == <span class="hljs-number">0</span>)<br>            <span class="hljs-keyword">return</span> a;<br>         <span class="hljs-keyword">long</span> r = a % b;<br>        <span class="hljs-keyword">return</span> gcd(b,r);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>辗转相减法：两数相减直到相等，得到的结果即两数的最小公约数。时间复杂度为 **log(N)**。</p>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建 Gitee 博客</title>
    <link href="/2021/07/01/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <url>/2021/07/01/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="搭建-Gitee-博客"><a href="#搭建-Gitee-博客" class="headerlink" title="搭建 Gitee 博客"></a>搭建 Gitee 博客</h1><p>安装 Git</p><p>安装 nodejs</p><p>进入 <a href="http://nodejs.cn/download/">node.js 中文网</a> 下载 nodejs，下载 LTS 版本。<a href="https://nodejs.org/zh-cn/download/">官网</a> 下载太慢。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 检查 node 是否安装成功，node 版本要高于 v12.0 否则 hexo 报错</span><br>node -v<br>npm -v<br></code></pre></td></tr></table></figure><p>配置环境变量</p><ol><li><p>安装目录新建 <code>node_global</code> 以及 <code>node_cache</code> 两个文件夹</p></li><li><p>在安装路径下打开 cmd，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config <span class="hljs-built_in">set</span> prefix <span class="hljs-string">&quot;E:\softerwares\nodjs\node_global&quot;</span><br>npm config <span class="hljs-built_in">set</span> cache <span class="hljs-string">&quot;E:\softerwares\nodjs\node_cache&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>高级系统设置，系统变量新建 <code>NODE_PATH</code>，输入 <code>E:\softerwares\nodjs\node_global\node_modules</code>；用户变量下的 <code>Path</code> 添加 <code>E:\softerwares\node_global</code></p></li></ol><p>安装淘宝 cnpm 镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># c:/USers/rdleng 目录下</span><br>npm install -g cnpm --registry=https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><p> 检查是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cnpm -v<br></code></pre></td></tr></table></figure><p>博客安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cnpm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>检查安装是否成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo -v<br></code></pre></td></tr></table></figure><p>任意文件夹新建目录，如 <code>e://rdleng_blog</code>，进入文件夹，右键 <code>git bash here</code>；</p><p>博客初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init<br></code></pre></td></tr></table></figure><p>运行博客</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s<br></code></pre></td></tr></table></figure><p>验证：浏览器输入 <a href="http://localhost:4000/">http://localhost:4000</a> 。</p><p>hexo 常用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;文章标题&quot;</span><br></code></pre></td></tr></table></figure><p>使用 Typora 编辑文件。</p><p>清除博客缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br></code></pre></td></tr></table></figure><p>生成静态页面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br></code></pre></td></tr></table></figure><p>码云新建私有仓库，名称为 rdleng_blog</p><p>安装 git 插件，博客根路径下输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cnpm install --save hexo-deployer-git<br></code></pre></td></tr></table></figure><p>设置远程仓库</p><p>打开 <code>._config.yml</code></p><p>修改</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">url:</span> <span class="hljs-string">http://gitee.com/rdleng0</span><br><span class="hljs-string">root:/rdleng_blog/</span><br></code></pre></td></tr></table></figure><p>设置仓库地址</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://gitee.com/rdleng0/rdleng_blog</span>   <br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>部署到远端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo d<br></code></pre></td></tr></table></figure><p>如果报错</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">remote:</span> Access denied<br><span class="hljs-symbol">fatal:</span> unable <span class="hljs-keyword">to</span> access <span class="hljs-comment">&#x27;https://gitee.com/rdleng0/rdleng_blog/&#x27;: The requested URL returned error: 403</span><br></code></pre></td></tr></table></figure><p>清空本地账号的缓存，win+r -&gt; control -&gt; 用户账户 -&gt; 凭证管理器</p><p>码云开启静态页面服务</p><p><img src="https://gitee.com/rdleng0/typora-img/raw/master//img/20210701081954.png" alt="image-20210701081951758"></p><p>直接启动即可。</p><p>每次 <code>hexo d</code> 之后要更新。</p><p>博客流程</p><ol><li><p>写博客</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">hexo <span class="hljs-keyword">new</span> <span class="hljs-string">&quot;文章名&quot;</span> 使用 Typora 编辑文件<br></code></pre></td></tr></table></figure></li><li><p>清缓存 &amp; 更新渲染</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs excel">hexo <span class="hljs-built_in">clean</span> 清缓存<br>hexo g 重新渲染<br></code></pre></td></tr></table></figure></li><li><p>推送到码云</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure></li><li><p>更新码云的静态页面</p></li></ol><p><a href="https://blog.csdn.net/qq_46036214/article/details/110137239">在 gitee 搭建属于自己的博客</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/07/01/hello-world/"/>
    <url>/2021/07/01/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
